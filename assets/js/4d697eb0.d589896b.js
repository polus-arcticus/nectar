"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[766],{6206:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var n=o(4848),a=o(8453);const s={sidebar_position:1},r="Intents and Digital Public Goods",i={id:"why-nectar/digital-public-goods",title:"Intents and Digital Public Goods",description:"Intents provide a way to abstract away choice of counterparty. In the case of swap routing we can than propose alternative algorithms for choosing such counter parties. Why route through a normal pool that is taking fees as profit, when one can route through a pool or two that offers some sort of positive externality?",source:"@site/docs/why-nectar/digital-public-goods.md",sourceDirName:"why-nectar",slug:"/why-nectar/digital-public-goods",permalink:"/nectar/docs/why-nectar/digital-public-goods",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/why-nectar/digital-public-goods.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Why Nectar",permalink:"/nectar/docs/category/why-nectar"},next:{title:"Autonomous Agents, Drips and Attestations",permalink:"/nectar/docs/why-nectar/drips-and-attestations"}},c={},u=[];function d(t){const e={a:"a",h1:"h1",p:"p",...(0,a.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"intents-and-digital-public-goods",children:"Intents and Digital Public Goods"}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"https://www.paradigm.xyz/2023/06/intents",children:"Intents"})," provide a way to abstract away choice of counterparty. In the case of swap routing we can than propose alternative algorithms for choosing such counter parties. Why route through a normal pool that is taking fees as profit, when one can route through a pool or two that offers some sort of positive externality?"]}),"\n",(0,n.jsx)(e.p,{children:"With Nectar hooks we can use custom fee mechanism and coophive.network to save up and repetitively execute computation jobs to offer positive externalities. Imagine a job that sql streams a collection of grocery databases together and runs regressions on that data. Or one that consumes a variety of uniswap TWAPs and prompts an AI to generate news blurbs about the tokens or token groups."})]})}function p(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},8453:(t,e,o)=>{o.d(e,{R:()=>r,x:()=>i});var n=o(6540);const a={},s=n.createContext(a);function r(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),n.createElement(s.Provider,{value:e},t.children)}}}]);